"""
üìä –û—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã —Å Matplotlib - –≤–∞—à –ø–µ—Ä–≤—ã–π —à–∞–≥ –≤ –º–∏—Ä –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏!

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Matplotlib:
- –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤
- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
- –†–∞–±–æ—Ç–∞ —Å —Å—É–±–ø–ª–æ—Ç–∞–º–∏
- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from datetime import datetime, timedelta

print("üé® –ò–∑—É—á–∞–µ–º –æ—Å–Ω–æ–≤—ã Matplotlib!")
print("=" * 50)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ matplotlib –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
plt.rcParams['figure.figsize'] = (10, 6)
plt.rcParams['font.size'] = 11
plt.rcParams['axes.grid'] = True
plt.rcParams['grid.alpha'] = 0.3

def demo_basic_plot():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞"""
    print("\nüìà 1. –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π –ª–∏–Ω–µ–π–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    x = np.linspace(0, 10, 100)
    y = np.sin(x)
    
    plt.figure(figsize=(10, 6))
    plt.plot(x, y, 'b-', linewidth=2, label='sin(x)')
    plt.plot(x, np.cos(x), 'r--', linewidth=2, label='cos(x)')
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
    plt.title('üìà –ú–æ–π –ø–µ—Ä–≤—ã–π –≥—Ä–∞—Ñ–∏–∫ –≤ Matplotlib', fontsize=14, pad=20)
    plt.xlabel('X –∑–Ω–∞—á–µ–Ω–∏—è')
    plt.ylabel('Y –∑–Ω–∞—á–µ–Ω–∏—è')
    plt.legend()
    plt.grid(True, alpha=0.3)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
    plt.tight_layout()
    plt.show()
    
    print("‚úÖ –ë–∞–∑–æ–≤—ã–π –≥—Ä–∞—Ñ–∏–∫ —Å–æ–∑–¥–∞–Ω!")

def demo_business_chart():
    """–°–æ–∑–¥–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–≥—Ä–∞—Ñ–∏–∫–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("\nüíº 2. –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂ (–±–∏–∑–Ω–µ—Å-–ø—Ä–∏–º–µ—Ä)")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂
    months = ['–Ø–Ω–≤', '–§–µ–≤', '–ú–∞—Ä', '–ê–ø—Ä', '–ú–∞–π', '–ò—é–Ω', 
              '–ò—é–ª', '–ê–≤–≥', '–°–µ–Ω', '–û–∫—Ç', '–ù–æ—è', '–î–µ–∫']
    sales_2023 = [150, 180, 220, 240, 280, 260, 290, 310, 285, 340, 380, 420]
    sales_2024 = [180, 210, 250, 280, 320, 300, 340, 370, 350, 400, 450, 500]
    
    plt.figure(figsize=(12, 7))
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ç–æ–ª–±—á–∞—Ç—É—é –¥–∏–∞–≥—Ä–∞–º–º—É
    x = np.arange(len(months))
    width = 0.35
    
    bars1 = plt.bar(x - width/2, sales_2023, width, label='2023 –≥–æ–¥', 
                    color='#1f77b4', alpha=0.8)
    bars2 = plt.bar(x + width/2, sales_2024, width, label='2024 –≥–æ–¥', 
                    color='#ff7f0e', alpha=0.8)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Å—Ç–æ–ª–±—Ü—ã
    for bar in bars1:
        height = bar.get_height()
        plt.text(bar.get_x() + bar.get_width()/2., height + 5,
                f'{height}–ö', ha='center', va='bottom')
    
    for bar in bars2:
        height = bar.get_height()
        plt.text(bar.get_x() + bar.get_width()/2., height + 5,
                f'{height}–ö', ha='center', va='bottom')
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
    plt.title('üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂ –ø–æ –º–µ—Å—è—Ü–∞–º', fontsize=16, pad=20)
    plt.xlabel('–ú–µ—Å—è—Ü')
    plt.ylabel('–ü—Ä–æ–¥–∞–∂–∏, —Ç—ã—Å. —Ä—É–±.')
    plt.xticks(x, months)
    plt.legend()
    plt.grid(axis='y', alpha=0.3)
    
    plt.tight_layout()
    plt.show()
    
    print("‚úÖ –ë–∏–∑–Ω–µ—Å-–≥—Ä–∞—Ñ–∏–∫ –≥–æ—Ç–æ–≤!")

def demo_subplots():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –≥—Ä–∞—Ñ–∏–∫–∞–º–∏"""
    print("\nüéõÔ∏è 3. –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≥—Ä–∞—Ñ–∏–∫–æ–≤")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    x = np.linspace(0, 10, 100)
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∏–≥—É—Ä—É —Å —Å—É–±–ø–ª–æ—Ç–∞–º–∏
    fig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2, 2, figsize=(15, 10))
    fig.suptitle('üé® –ì–∞–ª–µ—Ä–µ—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –≥—Ä–∞—Ñ–∏–∫–æ–≤', fontsize=16)
    
    # –ì—Ä–∞—Ñ–∏–∫ 1: –õ–∏–Ω–µ–π–Ω—ã–π
    ax1.plot(x, np.sin(x), 'b-', linewidth=2)
    ax1.set_title('üìà –õ–∏–Ω–µ–π–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫')
    ax1.grid(True, alpha=0.3)
    
    # –ì—Ä–∞—Ñ–∏–∫ 2: –°—Ç–æ–ª–±—á–∞—Ç—ã–π
    categories = ['A', 'B', 'C', 'D', 'E']
    values = [23, 45, 56, 78, 32]
    ax2.bar(categories, values, color=['#ff9999', '#66b3ff', '#99ff99', '#ffcc99', '#ff99cc'])
    ax2.set_title('üìä –°—Ç–æ–ª–±—á–∞—Ç–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞')
    
    # –ì—Ä–∞—Ñ–∏–∫ 3: –†–∞—Å—Å–µ–∏–≤–∞–Ω–∏–µ  
    np.random.seed(42)
    x_scatter = np.random.randn(100)
    y_scatter = 2 * x_scatter + np.random.randn(100)
    ax3.scatter(x_scatter, y_scatter, alpha=0.7, color='green')
    ax3.set_title('üí´ –î–∏–∞–≥—Ä–∞–º–º–∞ —Ä–∞—Å—Å–µ–∏–≤–∞–Ω–∏—è')
    ax3.grid(True, alpha=0.3)
    
    # –ì—Ä–∞—Ñ–∏–∫ 4: –ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞
    sizes = [30, 25, 20, 15, 10]
    labels = ['–ö–∞—Ç–µ–≥–æ—Ä–∏—è A', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è B', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è C', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è D', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è E']
    colors = ['#ff9999', '#66b3ff', '#99ff99', '#ffcc99', '#ff99cc']
    ax4.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
    ax4.set_title('ü•ß –ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞')
    
    plt.tight_layout()
    plt.show()
    
    print("‚úÖ –ü–∞–Ω–µ–ª—å –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Å–æ–∑–¥–∞–Ω–∞!")

def demo_styling():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç–∏–ª–µ–π –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è"""
    print("\nüé® 4. –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–µ–º —Å–æ —Å—Ç–∏–ª—è–º–∏")
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    x = np.linspace(0, 10, 50)
    y1 = np.sin(x)
    y2 = np.cos(x)
    
    # –†–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç–∏–ª–∏ matplotlib
    styles = ['default', 'seaborn-v0_8', 'ggplot', 'bmh']
    
    fig, axes = plt.subplots(2, 2, figsize=(15, 10))
    fig.suptitle('üé® –ì–∞–ª–µ—Ä–µ—è —Å—Ç–∏–ª–µ–π Matplotlib', fontsize=16)
    
    for i, style in enumerate(styles):
        ax = axes[i//2, i%2]
        
        with plt.style.context(style):
            ax.plot(x, y1, linewidth=2, label='sin(x)')
            ax.plot(x, y2, linewidth=2, label='cos(x)')
            ax.set_title(f'–°—Ç–∏–ª—å: {style}')
            ax.legend()
            ax.grid(True, alpha=0.3)
    
    plt.tight_layout()
    plt.show()
    
    print("‚úÖ –ì–∞–ª–µ—Ä–µ—è —Å—Ç–∏–ª–µ–π –≥–æ—Ç–æ–≤–∞!")

def demo_save_formats():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö"""
    print("\nüíæ 5. –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥—Ä–∞—Ñ–∏–∫–∏ –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö")
    
    # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π –≥—Ä–∞—Ñ–∏–∫ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    plt.figure(figsize=(12, 8))
    
    x = np.linspace(0, 4*np.pi, 100)
    y = np.sin(x) * np.exp(-x/10)
    
    plt.plot(x, y, 'b-', linewidth=3, label='–ó–∞—Ç—É—Ö–∞—é—â–∞—è —Å–∏–Ω—É—Å–æ–∏–¥–∞')
    plt.fill_between(x, 0, y, alpha=0.3, color='blue')
    
    plt.title('üìà –ì—Ä–∞—Ñ–∏–∫ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è', fontsize=16, pad=20)
    plt.xlabel('X –∑–Ω–∞—á–µ–Ω–∏—è')
    plt.ylabel('Y –∑–Ω–∞—á–µ–Ω–∏—è')
    plt.legend(fontsize=12)
    plt.grid(True, alpha=0.3)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
    formats = {
        'PNG': {'dpi': 300, 'bbox_inches': 'tight'},
        'PDF': {'bbox_inches': 'tight'},
        'SVG': {'bbox_inches': 'tight'}
    }
    
    for format_name, kwargs in formats.items():
        filename = f'demo_graph.{format_name.lower()}'
        plt.savefig(filename, **kwargs)
        print(f"  ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {filename}")
    
    plt.show()
    print("‚úÖ –í—Å–µ —Ñ–æ—Ä–º–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")

def create_professional_template():
    """–®–∞–±–ª–æ–Ω –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞"""
    print("\nüèÜ 6. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —à–∞–±–ª–æ–Ω")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∏–ª—è
    plt.style.use('seaborn-v0_8-whitegrid')
    
    # –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞
    colors = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd']
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    quarters = ['Q1 2023', 'Q2 2023', 'Q3 2023', 'Q4 2023', 'Q1 2024']
    revenue = [1200, 1350, 1180, 1650, 1420]
    profit = [180, 220, 150, 280, 240]
    
    fig, ax = plt.subplots(figsize=(12, 8))
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫
    x = np.arange(len(quarters))
    width = 0.35
    
    bars = ax.bar(x, revenue, width, label='–í—ã—Ä—É—á–∫–∞', color=colors[0], alpha=0.8)
    line = ax.plot(x, profit, color=colors[1], marker='o', linewidth=3, 
                   markersize=8, label='–ü—Ä–∏–±—ã–ª—å')
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Å—Ç–æ–ª–±—Ü—ã
    for i, (bar, profit_val) in enumerate(zip(bars, profit)):
        height = bar.get_height()
        ax.text(bar.get_x() + bar.get_width()/2., height + 20,
                f'{height}–ú', ha='center', va='bottom', fontweight='bold')
        ax.text(i, profit_val + 30, f'{profit_val}–ú', ha='center', 
                va='bottom', fontweight='bold', color=colors[1])
    
    # –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ
    ax.set_title('üìä –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∫–æ–º–ø–∞–Ω–∏–∏', 
                fontsize=18, fontweight='bold', pad=30)
    ax.set_xlabel('–ö–≤–∞—Ä—Ç–∞–ª', fontsize=12)
    ax.set_ylabel('–ú–ª–Ω —Ä—É–±–ª–µ–π', fontsize=12)
    ax.set_xticks(x)
    ax.set_xticklabels(quarters)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–µ–≥–µ–Ω–¥—ã
    ax.legend(loc='upper left', fontsize=12, frameon=True, shadow=True)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ç–∫—É
    ax.grid(True, alpha=0.3, linestyle='-', linewidth=0.5)
    ax.set_axisbelow(True)
    
    # –£–±–∏—Ä–∞–µ–º –≤–µ—Ä—Ö–Ω—é—é –∏ –ø—Ä–∞–≤—É—é —Ä–∞–º–∫–∏
    ax.spines['top'].set_visible(False)
    ax.spines['right'].set_visible(False)
    
    plt.tight_layout()
    plt.show()
    
    print("‚úÖ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —à–∞–±–ª–æ–Ω –≥–æ—Ç–æ–≤!")

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
if __name__ == "__main__":
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–∑—É—á–µ–Ω–∏–µ Matplotlib!")
    
    demo_basic_plot()
    demo_business_chart() 
    demo_subplots()
    demo_styling()
    demo_save_formats()
    create_professional_template()
    
    print("\nüéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∏–∑—É—á–∏–ª–∏ –æ—Å–Ω–æ–≤—ã Matplotlib!")
    print("üìö –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –∏–∑—É—á–∏—Ç–µ seaborn_statistical.py")
    print("üí° –°–æ–≤–µ—Ç: —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤!")