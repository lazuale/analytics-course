"""
üßπ –®–∞–±–ª–æ–Ω –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∫–∞–∫ –æ—Å–Ω–æ–≤—É –¥–ª—è –ª–µ—á–µ–Ω–∏—è "–±–æ–ª—å–Ω—ã—Ö" –¥–∞–Ω–Ω—ã—Ö
"""

import pandas as pd
import numpy as np
from datetime import datetime

def diagnose_data(df):
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º –≤ –¥–∞–Ω–Ω—ã—Ö"""
    print("ü©∫ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –î–ê–ù–ù–´–•")
    print("=" * 20)

    print(f"üìè –†–∞–∑–º–µ—Ä: {df.shape[0]} —Å—Ç—Ä–æ–∫, {df.shape[1]} —Å—Ç–æ–ª–±—Ü–æ–≤")
    print(f"‚ùå –ü—Ä–æ–ø—É—Å–∫–∏: {df.isnull().sum().sum()}")
    print(f"üîÑ –î—É–±–ª–∏–∫–∞—Ç—ã: {df.duplicated().sum()}")

    print("\nüìä –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö:")
    for col, dtype in df.dtypes.items():
        print(f"   {col}: {dtype}")

    return df

def clean_duplicates(df):
    """–£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤"""
    print("\nüßπ –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤...")

    before = len(df)
    df = df.drop_duplicates()
    after = len(df)

    print(f"   –£–¥–∞–ª–µ–Ω–æ: {before - after} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤")
    return df

def fix_data_types(df):
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö...")

    # –ü—Ä–∏–º–µ—Ä: –∏—Å–ø—Ä–∞–≤–ª—è–µ–º —Ü–µ–Ω—ã
    if 'price' in df.columns:
        # –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª—ã –≤–∞–ª—é—Ç –∏ –ø—Ä–∏–≤–æ–¥–∏–º –∫ —á–∏—Å–ª–∞–º
        df['price'] = df['price'].astype(str).str.replace('$', '').str.replace('free', '0')
        df['price'] = pd.to_numeric(df['price'], errors='coerce')
        print("   ‚úÖ –¶–µ–Ω—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")

    # –ü—Ä–∏–º–µ—Ä: –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–∞—Ç—ã
    if 'order_date' in df.columns:
        df['order_date'] = pd.to_datetime(df['order_date'], errors='coerce')
        print("   ‚úÖ –î–∞—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")

    return df

def handle_missing_values(df):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π"""
    print("\nüíä –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–ø—É—Å–∫–æ–≤...")

    # –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–ø—É—Å–∫–∏ –≤ —á–∏—Å–ª–æ–≤—ã—Ö —Å—Ç–æ–ª–±—Ü–∞—Ö –º–µ–¥–∏–∞–Ω–æ–π
    numeric_columns = df.select_dtypes(include=[np.number]).columns
    for col in numeric_columns:
        if df[col].isnull().sum() > 0:
            df[col] = df[col].fillna(df[col].median())
            print(f"   ‚úÖ {col}: –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –º–µ–¥–∏–∞–Ω–æ–π")

    # –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–ø—É—Å–∫–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å—Ç–æ–ª–±—Ü–∞—Ö
    text_columns = df.select_dtypes(include=['object']).columns
    for col in text_columns:
        if df[col].isnull().sum() > 0:
            df[col] = df[col].fillna('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            print(f"   ‚úÖ {col}: –∑–∞–ø–æ–ª–Ω–µ–Ω–æ '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'")

    return df

def standardize_text(df):
    """–°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –ø–æ–ª–µ–π"""
    print("\nüìù –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞...")

    text_columns = df.select_dtypes(include=['object']).columns
    for col in text_columns:
        if col not in ['order_date']:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–∞—Ç—ã
            df[col] = df[col].astype(str).str.strip().str.title()
            print(f"   ‚úÖ {col}: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω")

    return df

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏
def clean_data(filepath):
    """–ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö"""
    print("üè• –ù–∞—á–∏–Ω–∞–µ–º –ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    try:
        df = pd.read_csv(filepath)
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: {filepath}")
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {filepath}")
        return None

    # –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ —ç—Ç–∞–ø—ã –ª–µ—á–µ–Ω–∏—è
    df = diagnose_data(df)
    df = clean_duplicates(df)
    df = fix_data_types(df)
    df = handle_missing_values(df)
    df = standardize_text(df)

    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    print("\nüéâ –õ–µ—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üìä –ò—Ç–æ–≥–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä: {df.shape[0]} —Å—Ç—Ä–æ–∫, {df.shape[1]} —Å—Ç–æ–ª–±—Ü–æ–≤")
    print(f"‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ: {df.isnull().sum().sum()} –ø—Ä–æ–ø—É—Å–∫–æ–≤, {df.duplicated().sum()} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤")

    return df

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
    # cleaned_df = clean_data('messy_ecommerce_data.csv')
    # cleaned_df.to_csv('cleaned_data.csv', index=False)

    print("üë®‚Äç‚öïÔ∏è –®–∞–±–ª–æ–Ω –¥–æ–∫—Ç–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    print("–ò–∑–º–µ–Ω–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ª–µ—á–µ–Ω–∏–µ.")
